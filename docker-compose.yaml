version: "3"
services:
  zookeeper:
    image: debezium/zookeeper:1.9
    restart: always
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888

  kafka:
    image: debezium/kafka:1.9
    restart: always
    ports:
      - 9092:9092
    # volumes:
    #   - ./kafka/data:/kafka/data
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181

  postgres:
    image: debezium/postgres:11
    restart: always
    ports:
      - 5432:5432
    # volumes:
    #   - postgresql-volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=test_db

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    restart: always
    ports:
      - 9200:9200
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  connect:
    image: debezium/connect-jdbc-es:1.9
    build:
     context: ./debezium-jdbc-es
     args:
        DEBEZIUM_VERSION: 1.9
    restart: always
    ports:
      - 8083:8083
      - 5005:5005
    links:
      - kafka
      # - postgres
      - elasticsearch
      - schema-registry
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_source_connect_statuses
      - CONNECT_KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.4
    container_name: schema-registry
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: "curl -f http://localhost:8081 || exit 1"

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.0.4
    container_name: ksqldb-server
    restart: unless-stopped
    depends_on:
      - kafka
      - schema-registry
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_SERVICE_ID: ksqldb-server-1
      KSQL_AUTO_OFFSET_RESET: "earliest"
    healthcheck:
      test: "curl -f http://localhost:8088 || exit 1"
# volumes:
#   esdata:
#     driver: local
#   kafka-data:
#     driver: local
#   postgresql-volume:
#     external: true
